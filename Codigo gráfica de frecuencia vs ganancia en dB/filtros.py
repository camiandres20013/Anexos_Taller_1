# -*- coding: utf-8 -*-
"""Filtros.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N1UeZwrrUct-AmrEVpsBpd4pJgSFSqYu
"""

import matplotlib.pyplot as plt
import numpy as np

frecuencia = [100, 200, 500, 1000, 1500, 2000, 5000, 10000, 20000, 50000, 100000]

# Datos originales de ganancia en dB
ganan_pasivo_100nF_real = [0, 0, -1.217, -2.192, -3.003, -4.353, -10.515, -15.262, -19.831, -24.048, -29.046]
ganan_pasivo_100nF_prote = [0, -0.087, -0.446, -1.514, -2.853, -4.152, -10.37, -16.478, -21.938, -30.173, -35.918]
ganan_pasivo_10nF_real = [0, 0, 0, 0, -0.169, -0.341, -1.451, -3.807, -7.959, -14.704, -19.831]
ganan_pasivo_10nF_prote = [0, 0, 0, 0, -0.087, -0.087, -0.446, -1.514, -4.152, -10.458, -16.478]
ganan_activo_100nF_real = [9.279, 9.223, 9.167, 9.111, 8.88, 8.704, 6.586, 2.961, -1.835, -8.613, -14.264]
ganan_activo_100nF_prote = [9.435, 9.435, 9.046, 8.023, 6.716, 5.352, -1.023, -6.689, -12.369, -20.496, -26.689]
ganan_activo_10nF_real = [9.39, 9.279, 9.335, 9.279, 9.279, 9.167, 8.401, 6.854, 4.383, -3.255, -13.201]
ganan_activo_10nF_prote = [9.542, 9.542, 9.542, 9.489, 9.435, 9.435, 9.215, 5.524, -0.668, -8.982, -15.185]



# Crea la gráficos pasivos
plt.plot( frecuencia, ganan_pasivo_100nF_real, marker='o', linestyle='-',  color='purple', label='Datos Reales')
plt.title('Frecuencia vs. Ganancia')
plt.xlabel('Frecuencia (Hz)')
plt.ylabel('Ganancia (dB)')
plt.grid(True, which='both', axis='both')
plt.legend()
plt.show()


plt.plot( frecuencia, ganan_pasivo_100nF_prote, marker='o', linestyle='-',  color='green', label='Datos Simulados')
plt.title('Frecuencia vs. Ganancia')
plt.xlabel('Frecuencia (Hz)')
plt.ylabel('Ganancia (dB)')
plt.grid(True, which='both', axis='both')
plt.legend()
plt.show()


plt.plot( frecuencia, ganan_pasivo_10nF_real, marker='o', linestyle='-',  color='purple', label='Datos Reales')
plt.title('Frecuencia vs. Ganancia')
plt.xlabel('Frecuencia (Hz)')
plt.ylabel('Ganancia (dB)')
plt.grid(True, which='both', axis='both')
plt.legend()
plt.show()


plt.plot( frecuencia, ganan_pasivo_10nF_prote, marker='o', linestyle='-',  color='green', label='Datos Simulados')
plt.title('Frecuencia vs. Ganancia')
plt.xlabel('Frecuencia (Hz)')
plt.ylabel('Ganancia (dB)')
plt.grid(True, which='both', axis='both')
plt.legend()
plt.show()

# Crea la gráficos activos
plt.plot( frecuencia, ganan_activo_100nF_real, marker='o', linestyle='-',  color='purple', label='Datos Reales')
plt.title('Frecuencia vs. Ganancia')
plt.xlabel('Frecuencia (Hz)')
plt.ylabel('Ganancia (dB)')
plt.grid(True, which='both', axis='both')
plt.legend()
plt.show()


plt.plot( frecuencia, ganan_activo_100nF_prote, marker='o', linestyle='-',  color='green', label='Datos Simulados')
plt.title('Frecuencia vs. Ganancia')
plt.xlabel('Frecuencia (Hz)')
plt.ylabel('Ganancia (dB)')
plt.grid(True, which='both', axis='both')
plt.legend()
plt.show()


plt.plot( frecuencia, ganan_activo_10nF_real, marker='o', linestyle='-',  color='purple', label='Datos Reales')
plt.title('Frecuencia vs. Ganancia')
plt.xlabel('Frecuencia (Hz)')
plt.ylabel('Ganancia (dB)')
plt.grid(True, which='both', axis='both')
plt.legend()
plt.show()


plt.plot( frecuencia, ganan_activo_10nF_prote, marker='o', linestyle='-',  color='green', label='Datos Simulados')
plt.title('Frecuencia vs. Ganancia')
plt.xlabel('Frecuencia (Hz)')
plt.ylabel('Ganancia (dB)')
plt.grid(True, which='both', axis='both')
plt.legend()
plt.show()